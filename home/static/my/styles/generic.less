@import (less) "variables.less";


.browser-prefix(@property, @value) {
    -webkit-@{property}: @value;
    -moz-@{property}: @value;
    -o-@{property}: @value;
    -ms-@{property}: @value;
    @{property}: @value;
}

.browser-prefix-both(@property, @value) {
    -webkit-@{property}: ~"-webkit-@{value}";
    -moz-@{property}: ~"-moz-@{value}";
    -o-@{property}: ~"-o-@{value}";
    -ms-@{property}: ~"-ms-@{value}";
    @{property}: @value;
}



.on {
    display: initial;
}

.off {
    display: none;
}

.ib {
    display: inline-block;
}

.vmid {
    vertical-align: middle;
}

.black {
    background-color: black;
}

.transparent {
    background-color: transparent;
}

.large {
    font-size: large;
}

.huge {
    font-size: 32px;
}

.smaller {
    font-size: 80%;
}

.text-bold {
    font-weight: bold;
}

.small-caps {
    font-variant: small-caps;
}

.text-white {
    color: #DDD;
}

.dark-text-shadow {
    text-shadow: 2px 3px #222;
}


//===============================================
// WRITING MODES (vertical/horizontal etc.)
// thanks to David Storey
// http://generatedcontent.org/post/45384206019/writing-modes

.text-vertical-hack {
    width: 1em;
    line-height: 1.1;
}

.writing-mode(@mode) {
    .browser-prefix(writing-mode, @mode);
}

.text-vertical-rl {
    -ms-writing-mode: tb-rl;
    .writing-mode( vertical-rl );
}

.text-vertical-lr {
    -ms-writing-mode: tb-lr;
    .writing-mode( vertical-lr );
}

.text-horizontal-lr {
    -ms-writing-mode: lr-tb;
    .writing-mode( horizontal-tb );
}

.text-horizontal-rl {
    -ms-writing-mode: rl-tb;
    .writing-mode( horizontal-tb );
    direction: rtl; /* not specified as part of writing-mode property in standard syntax */
}

// ~END OF~ WRITING MODES
//==========================================


.serif {
    font-family: serif;
}

.text-upper {
    text-transform: uppercase;
}

.bold {
    font-weight: bold;
}

.italic {
    font-style: italic;
}


.quarter-side-margins {
    margin-left: 25%;
    margin-right: 25%;
}


.full-width {
    width: 100%;
}

.full-height {
    height: 100%;
}

.full-viewport {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

.cap-width {
    max-width: 100%;
}

.cap-height {
    max-height: 100%;
}

.no-padding {
    padding: 0;
}


.fit-image {
    width: auto;
    height : auto;
    .cap-width;
    .cap-height;
}

.full-width-image {
    .fit-image;
    width: 100%;
    max-height: initial;
}


// http://designshack.net/articles/css/10-less-css-examples-you-should-steal-for-your-projects/

.border-radius (@radius: 5px) {
    .browser-prefix( border-radius, @radius );
}

.border-radius-custom (@topleft: 5px, @topright: 5px, @bottomleft: 5px, @bottomright: 5px) {
    .browser-prefix(border-radius, @topleft @topright @bottomright @bottomleft);
}

.box-shadow( @x: 0px, @y: 3px, @blur: 5px, @color: rgba(0,0,0,0.5) ) {
    .browser-prefix(box-shadow, @x @y @blur @color);
}

.transition (@prop: all, @time: 150ms, @ease: ease) {
    .browser-prefix(transition, @prop @time @ease);
}

.transition-prefixed( @prop, @time: 150ms, @ease: ease ) {
    .browser-prefix-both( transition, @prop @time @ease );
}

.transform( @transforms: none ) {
    .browser-prefix(transform, @transforms);
}

.rotate (@rotate: 90deg) {
    .transform( rotate(@rotate) );
}

.gradient (@origin: left, @start: #ffffff, @stop: #000000) {
    background-color: @start;
    background-image: -webkit-linear-gradient(@origin, @start, @stop);
    background-image: -moz-linear-gradient(@origin, @start, @stop);
    background-image: -o-linear-gradient(@origin, @start, @stop);
    background-image: -ms-linear-gradient(@origin, @start, @stop);
    background-image: linear-gradient(@origin, @start, @stop);
}

.quick-gradient (@origin: left, @alpha: 0.2) {
    background-image: -webkit-linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
    background-image: -moz-linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
    background-image: -o-linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
    background-image: -ms-linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
    background-image: linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
}

.reflect (@length: 50%, @opacity: 0.2){
    -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(@length, transparent), to(rgba(255,255,255,@opacity)));
}






.filter( @things ) {
    .browser-prefix(filter, @things);
}

.grayscale( @howmuch: 100% ) {
    .filter( grayscale(@howmuch) );
}


.background-size( @size ) {
    .browser-prefix( background-size, @size );
}

.cover-background( @imageURL ) {
    background: url( @imageURL ) no-repeat center center;
    .background-size( cover );
}



.aspect-widescreen( @width ) {
    width: @width;
    height: @width * 9/16;
}


.condensed-line {
    line-height: 1;
}


.smallcaps {
    text-transform: uppercase;
    font-size: 80%;
}


.translucent {
    background-color: @translucent;
    &.hoverable {
        .transition( all, 0.2s, ease-in );
        &:hover {
            background-color: @translucent-hover;
        }
    }
}


.menu-align-right-edge {
    left: initial;
    right: 0;
}



.user-select( @select ) {
    .browser-prefix( user-select, @select );
}


.scrollbar-always-present {
    overflow-y: scroll;
}



.mt-loop(@k) when (@k > 0) {
    .mt-loop( (@k - 5) );
    .mt@{k} {
        margin-top: @k;
    }
}
.mt-loop(100px);


.ellipflow {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.ellipflow-inherit {
    overflow: inherit;
    white-space: inherit;
    text-overflow: inherit;
}




.animation( @a ) {
    .browser-prefix( animation, @a );
}
